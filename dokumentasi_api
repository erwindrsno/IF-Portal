## Endpoint: Masukan dan Keluaran
### Bentuk Masukan
API menerima masukan dalam tiga bentuk, yaitu: *parameter*, *query*, dan *body*. Pada dokumen ini *parameter* didefinisikan sebagai masukan yang diikutsertakan dalam bagian *path* dari suatu URI. Contoh:
```url
http://domain/api/v1/posts/<post_id>
```
Token `<post_id>` diganti dengan masukan yang dikehendaki. Masukan dalam bentuk *query* pada dokumen ini didefiniskan sebagai masukan yang diikutsertakan pada bagian *query string* pada suatu URI. Contoh:
```
http://domain/api/v1/posts?post_id=<post_id>
```
Masukan dalam bentuk *body* pada dokumen ini didefinisikan sebagai masukan yang diikutsertakan pada bagian *body* dari suatu *request* HTTP. Masukan dalam bentuk *body* harus menggunakan format JSON. Contoh:
```
{
    post_id: <post_id>
}
```

### Format Pendefinisian Masukan
Semua bentuk masukan, baik dalam bentuk *parameter*, *query*, maupun *body* akan didefinisikan dalam bentuk *JSON Object*. Definisi berupa *JSON Object* menunjukan struktur, tipe, dan format dari masukan suatu *endpoint*. Perhatikan contoh berikut:
```
POST http://domain/api/v1/posts/<post_id>?category_id=<category_id>
{
    "post_id": "integer",
    "category_id": "string|uuidv4",
    "status": "boolean"
}
```
Definisi yang berikan membutuhkan 3 buah argumen, yaitu: `post_id`, `category_id`, dan `status`. Argumen `post_id` dimasukkan dalam bentuk *parameter* sedangkan argumen `category_id` dimasukkan dalam bentuk *query*. Argumen terakhir, yaitu `status`, tidak muncul pada URI, hal ini menandakan bahwa `status` dimaksudkan untuk diikutsertakan pada *body*.

Definsi yang diberikan juga menentukan tipe data dan format masukan, pada definisi ditentukan bahwa argumen `post_id` memiliki tipe data `integer`, sedangkan `category_id` memiliki tipe data `string` dengan format `uuidv4`, dan argumen `status` memiliki tipe data `boolean`.

Pada definsi juga ditentukan bahwa *HTTP method* yang digunakan adalah `POST`.

Pada beberapa definisi juga terdapat aturan tambahan, yaitu: `ACCESS` aturan ini menetapkan `role` dari pengguna yang dapat mengakses suatu *endpoint*.

### Tipe Data dan Format
Berikut adalah tipe data yang mungkin muncul pada definisi masukan:
1. `integer`: bilangan bulat
2. `number`: bilangan ril
3. `string`
4. `boolean`: sebuah *boolean* dengan bentuk literal: `true` atau `false`.
5. `array`
6. `object`

Selain tipe data definisi juga dapat menentukan format dari masukan, berikut adalah format yang mungkin muncul pada definisi masukan:
1. `string|uuidv4`: sebuah UUID versi 4
2. `string|role`: *string* dengan kemungkinan masukan berupa `admin`, `lecturer`, dan `student`
2. `string|email`
3. `string|time`: format ini menyatakan waktu disertai dengan zona waktu dengan bentuk : `19:15+0500` yang melambangkan pukul 19 lewat 15 dengan zona waktu lebih 5 jam dari GMT.
4. `string|date`: format ini menyatakan tanggal dengan bentuk: `2022-04-12` yang melambangkan tahun 2022 bulan keempat (April) tanggal 12.
5. `string|day`: format ini merupakan hari dalam satu minggu yang dilambangkan dengan: `mon`, `tue`, `wed`, `thu`, `fri`, `sat`, dan `sun` yang menyatakan hari dari Senin hingga Minggu.
6. `string|datetime`: format ini terdiri dari tahun dan waktu disertai zona waktu dengan bentuk: `2022-04-12 19:00+0500` yang melambangkan tahun 2022 bulan keempat (April) tanggal 12 pukul 19:00 dengan zona waktu lebih 5 jam dari GMT.
7. `string|score`: nilai akhir, yaitu: `A`, `B+`, `B`, `B-`, `C+`, `C`, `C-`, `D`, dan `E`.
8. `string|academic_year`: tahun akademik. Terdiri dari dua buah bilangan bulat, yaitu tahun dan bilangan 1 s/d 3. Bilangan 1 melambangkan semester ganjil, bilangan 2 melambangkan semester genap, sedangkan bilangan 3 melambangkan semester pendek.
9. `string|initial_year`: tahun masuk mahasiswa. Format sama dengan format `string|academic_year`, kecuali semester hanya dapat diisi dengan 1.

### Keluaran: Error
Semua *error* akan memiliki *HTTP status code* 4xx dan 5xx. Berikut adalah bentuk respon server jika terdapat *error*:
```
{
  "errcode": <errcode>,
  "field?": [<field>],
  "message?": <message>
}
```

Berikut adalah penjelasan `errcode`:
* `E_EXIST`: telah ada sebelumnya, atau terdapat duplikat dari data yang harus unik.
* `E_NOT_EXIST`: data yang diminta tidak ada, atau referensi ke suatu entitas (misalnya: `student` dengan `student_id`) tidak ditemukan.
* `E_UNKNOWN`: terjadi suatu *error* yang tidak diketahui penyebabnya.
* `E_DUPLICATE`: perubahan yang diminta akan menimbulkan adanya duplikat pada *field* di mana data yang tersimpan harus unik, error ini akan dilengkapi oleh keterangan *field* penyebab *error*.
* `E_INVALID_VALUE`
* `E_INVALID_FORMAT`

Khusus `E_INVALID_VALUE` dan `E_INVALID_FORMAT` tidak disebutkan kembali pada penjelasan dan definisi setiap *endpoint*. Kedua `errcode` merupakan *error* yang terjadi jika *request* tidak mengikuti definisi yang telah diberikan.

## Endpoint: Academic Year
### Mengubah Academic Year Aktif
Dengan mengubah tahun akademik aktif, sistem akan membuat 21 semester ke depan, diawali dengan tahun akademik aktif.
```
ACCESS: admin
PATCH /academic-years/active-year
{
  "year": "integer|range:1970-9000",
  "semester": "integer|range:1-3"
}
```

Success:
```
{
  "active_year": "string|academic_year"
}
```

### Melihat Daftar Academic Year
```
ACCESS: admin
GET /academic-years
```

Success:
```
{
  "active_year": "string|academic_year",
  "academic_years": [
      "string|academic_year"
  ]
}
```

Error:
* `E_INVALID_SETTINGS`

## Endpoint: Course
### Membuat Mata Kuliah
Membuat mata kuliah baru.
```
ACCESS: admin
POST /courses
{
  "name": "string|length:1-256",
  "code": "string|length:5-15",
  "semester": "integer|range:1-8"
}
```

Success:
```
{
  "id": "string|uuidv4",
  "code": "string|length:5-15",
  "name": "string|length:1-256",
  "semester": "integer|range:1-8"
  "archived_at": "string|datetime|nullable"
}
```

Error:
* `E_DUPLICATE` (*field* `code`): perubahan yang diminta akan menimbulkan adanya duplikat pada *field* `code`.

### Mengubah Mata Kuliah
Mengubah mata kuliah yang direferensikan oleh *parameter* `id`.
```
ACCESS: admin
PATCH /courses/<id>
{
  "id": "string|uuidv4",
  "name?": "string|length:1-256",
  "code?": "string|length:5-15",
  "semester?": "integer|range:1-8"
}
```

Success:
```
{
  "id": "string|uuidv4",
  "code": "string|length:5-15",
  "name": "string|length:1-256",
  "semester": "integer|range:1-8"
  "archived_at": "string|datetime|nullable"
}
```

Error:
* `E_NO_ARGUMENT`: tidak ada argumen yang diberikan untuk mengubah mata kuliah baik `name`, `code`, maupun `semester`.
* `E_NOT_EXIST`: mata kuliah, yang direferensikan oleh `id`, tidak ada.
* `E_DUPLICATE` (*field* `code`): perubahan yang diminta akan menimbulkan adanya duplikat pada *field* `code`.

### Mengarsipkan Mata Kuliah
Mengarsipkan mata kuliah yang direferensikan oleh *parameter* `id`.
```
ACCESS: admin
DELETE /courses/<id>/action/archive
{
    "id": "string|uuidv4"
}
```

Success:
```
{
  "id": "string|uuidv4",
  "code": "string|length:5-15",
  "name": "string|length:1-256",
  "semester": "integer|range:1-8"
  "archived_at": "string|datetime|nullable"
}
```

Error:
* `E_NOT_EXIST`: mata kuliah, yang direferensikan oleh `id`, tidak ada.

### Mengembalikan Mata Kuliah Terarsipkan
Mengembalikan mata kuliah yang direferensikan oleh *parameter* `id`.
```
ACCESS: admin
DELETE /courses/<id>/action/restore
{
    "id": "string|uuidv4"
}
```

Success:
```
{
  "id": "string|uuidv4",
  "code": "string|length:5-15",
  "name": "string|length:1-256",
  "semester": "integer|range:1-8"
  "archived_at": "string|datetime|nullable"
}
```

Error:
* `E_NOT_EXIST`: mata kuliah, yang direferensikan oleh `id`, tidak ada.

### Melihat Daftar Mata Kuliah
```
ACCESS: all
FILTER: code, name
ORDER: code, name
GET /courses?filter=<filter>&order=<order>&limit=<limit>&offset=<offset>
{
  "filter?": {
      "code?": "string",
      "name?": "string"
  },
  "order?": {
      "column": "string|default:code",
      "direction": "string|default:asc"
  },
  "limit?": "integer|range:1-10|default:5",
  "offset?": "integer|range:1-100|default:0"
}
```
Daftar dapat disaring menggunakan *query* `filter` berdasarkan `code` dan `name` dari mata kuliah. Daftar dapat diurutkan dengan *query* `order` dengan menentukan `column` dan `direction`. Nilai dari `column` yang mungkin adalah: `name` dan `code`. Nilai dari `direction` yang mungkin adalah: `asc` untuk pengurutan menaik, dan `desc` untuk pengurutan menurun. *Query* `limit` menentukan banyaknya *record* atau *item* yang akan dikembalikan oleh *endpoint*, *query* `offset` menentukan banyaknya *record* atau *item* yang akan dilewati (tidak diikutsertakan). Perbandingan `filter` untuk `code` dan `name` dilakukan dengan menggunakan perbandingan sebagian, atau jika *substring* masukan termasuk pada *string* pada basis data.

Success:
*Array* dari mata kuliah
```
[
  {
    "id": "string|uuidv4",
    "code": "string|length:5-15",
    "name": "string|length:1-256",
    "semester": "integer|range:1-8"
    "archived_at": "string|datetime|nullable"
  }
]
```

Error:
* `E_NOT_EXIST`: mata kuliah, yang direferensikan oleh `id`, tidak ada.

### Membuat Prasyarat Mata Kuliah
Membuat prasyarat sebuah mata kuliah yang direferensikan oleh `course_id`, dengan syarat mata kuliah yang direferensikan oleh `prereq_id` dengan nilai minimal yang ditentukan oleh `score`.
```
ACCESS: admin
POST /courses/<course_id>/prerequisites/<prereq_id>
{
  "course_id": "string|uuidv4",
  "prereq_id": "string|uuidv4",
  "score": "string|score"
}
```

Success:
```
{
  "course_id": "string|uuidv4",
  "prereq_id": "string|uuidv4",
  "score": "string|score"
}
```

Error:
* `E_EXIST`: prasyarat telah ada sebelumnya.
* `E_NOT_EXIST` (*field* `course_id`): mata kuliah yang direferensikan oleh `course_id` tidak ada.
* `E_NOT_EXIST` (*field* `prereq_id`): mata kuliah yang direferensikan oleh `prereq_id` tidak ada.

### Menghapus Prasyarat Mata Kuliah
Menghapus prasyarat sebuah mata kuliah yang direferensikan oleh `course_id`, dengan syarat mata kuliah yang direferensikan oleh `prereq_id`.
```
ACCESS: admin
DELETE /courses/<course_id>/prerequisites/<prereq_id>
{
  "course_id": "string|uuidv4",
  "prereq_id": "string|uuidv4"
}
```

Success:
```
{
  "course_id": "string|uuidv4",
  "prereq_id": "string|uuidv4",
  "score": "string|score"
}
```

Error:
* `E_NOT_EXIST`: prasyarat tidak ada

### Melihat Daftar Prasyarat Mata Kuliah
***TBA***

## Endpoint: Authentication (Updated: 14-12-2022-1)
```
POST /authenticate
{
  "email": "string|email",
  "password": "string",
  "role": "string"
}
```

Success:
```
{
  token: "string"
}
```

Error:
* `E_AUTH_FAILED`

## Endpoint: User
### Menambah Pengguna
Jika `role` dari pengguna adalah `lecturer` atau `admin`:
```
ACCESS: admin
POST /users
{
  "name": "string|length:1-256",
  "email": "string|email",
  "password": "string",
  "roles": [
    "string|role"
  ]
}
```

Jika `role` dari pengguna adalah `student`:
```
ACCESS: admin
POST /users
{
    "name": "string|length:1-256",
    "email": "string|email",
    "roles": [
      "string|role"
    ],
    "npm": "string|length:1-16",
    "year": "integer|range:1970-9000"
}
```

Success:
```
{
  "name": "string|length:1-256",
  "email": "string|email",
  "roles": [
    "string|role"
  ],
  "archived_at": "string|datetime|nullable"
}
```

Error:
* `E_DUPLICATE` (*field* `email`): perubahan yang diminta akan menimbulkan adanya duplikat pada *field* `email`.
* `E_EXIST`

### Mengubah Pengguna
```
ACCESS: admin
PATCH /users/<id>
{
    "id": "string|uuidv4",
    "name?": "string|length:1-256",
    "email?": "string|email"
}
```

Success:
```
{
  "name": "string|length:1-256",
  "email": "string|email",
  "roles": [
    "string|role"
  ],
  "archived_at": "string|datetime|nullable"
}
```

Error:
* `E_DUPLICATE` (*field* `email`): perubahan yang diminta akan menimbulkan adanya duplikat pada *field* `email`.
* `E_NO_ARGUMENT`

### Mengarsipkan Pengguna
Menandai bahwah pengguna telah diarsipkan.
```
ACCESS: admin
PATCH /users/<id>/action/archive
{
    "id": "string|uuidv4"
}
```

Success:
```
{
  "name": "string|length:1-256",
  "email": "string|email",
  "roles": [
      "string|role"
  ],
  "archived_at": "string|datetime|nullable"
}
```

Error:
* `E_NOT_EXIST`: pengguna tidak ada.

### Mengembalikan Pengguna Terarsipkan
```
ACCESS: admin
PATCH /users/<id>/action/restore
{
    "id": "string|uuidv4"
}
```

Success:
```
{
  "name": "string|length:1-256",
  "email": "string|email",
  "roles": [
      "string|role"
  ],
  "archived_at": "string|datetime|nullable"
}
```

Error:
* `E_NOT_EXIST`: pengguna tidak ada.

### Melihat Pengguna Berdasarkan Email
```
ACCESS: all
GET /users/email/<email>
{
    "email": "string|email"
}
```

Success:
```
{
  "name": "string|length:1-256",
  "email": "string|email",
  "roles": [
      "string|role"
  ],
  "archived_at": "string|datetime|nullable"
}
```

Error:
* `E_NOT_EXIST`: pengguna tidak ada.

### Melihat Pengguna Berdasarkan Id
```
ACCESS: all
GET /users/id/<id>
{
    "id": "string|uuidv4"
}
```

Success:
```
{
  "name": "string|length:1-256",
  "email": "string|email",
  "roles": [
      "string|role"
  ],
  "archived_at": "string|datetime|nullable"
}
```

Error:
* `E_NOT_EXIST`: pengguna tidak ada.

### Melihat Daftar Pengguna
```
ACCESS: all
ORDER: name, email
GET /users?filter=<filter>&order=<order>&limit=<limit>&offset=<offset>
{
    "filter?": {
        "name?": "string",
        "email?": "string",
        "roles?": [
            "string|role"
        ]
    },
    "order?": {
        "column": "string|default:code",
        "direction": "string|default:asc"
    },
    "limit?": "integer|range:1-10|default:5",
    "offset?": "integer|range:1-100|default:0"
}
```
Penggunaan `filter` untuk `name` dan `email` dilakukan dengan melakukan perbandingan sebagian, yang berarti *string* 'abc' pada filter cocok dengan string 'abcd' pada basis data, karena *string* 'abcd' mengandung *string* 'abc'. Penggunaan `filter` untuk `roles` dilakukan dengan menggunakan perbandingan penuh. Kolom yang dapat diurutkan adalah: `name` dan `email`.
Untuk penjelasan tentang `limit` dan `offset` lihat bagian [Melihat Daftar Mata Kuliah](#melihat-daftar-mata-kuliah).

Success: 
*Array* dari pengguna
```
[
  {
    "name": "string|length:1-256",
    "email": "string|email",
    "roles": [
        "string|role"
    ],
    "archived_at": "string|datetime|nullable"
  }
]
```

Error:
* `E_NOT_EXIST`: pengguna tidak ada.

### Menambah Role Pengguna
```
ACCESS: admin
POST /users/<id>/roles/create
{
    "user_id": "string|uuidv4",
    "roles": [
        "string|role"
    ]
}
```

Success:
```
[
  "string|role"
]
```

Error:
* `E_NOT_EXIST` (*field* `user_id`): pengguna tidak ada.
* `E_EXIST`: *role* untuk pengguna tersebut telah ada sebelumnya.


### Menghapus Role Pengguna
```
ACCESS: admin
POST /users/<id>/roles/delete
{
    "id": "string|uuidv4",
    "roles": [
        "string|role"
    ]
}
```

Success:
```
[
  "string|role"
]
```

Error:
* `E_NOT_EXIST`: *role* tidak ada.

## Endpoint: Announcement
***TBA***

## Endpoint: Student
### Mengubah Student
```
ACCESS: admin
PATCH /student/<user_id>
{
  "user_id": "string|uuidv4",
  "npm": "string|length:1-16",
  "initial_year": "integer|range:1970-9000" /* tahun awal masuk */
}
```

Success:
```
{
  "user_id": "string|uuidv4",
  "npm": "string|length:1-16",
  "initial_year": "integer|range:1970-9000" /* tahun awal masuk */
}
```

Error:
* `E_EXIST`: telah ada sebelumnya.
* `E_DUPLICATE` (*field* `npm`): NPM telah digunakan.

### Melihat Student Berdasarkan Email
```
ACCESS: all
GET /student/email/<email>
{
    "email": "string|email",
}
```

Success:
```
{
  "user_id": "string|uuidv4",
  "name": "string|length:1-256",
  "email": "string|email",
  "npm": "string|length:1-16",
  "initial_year": "integer|range:1970-9000" /* tahun awal masuk */
}
```

Error:
* `E_NOT_EXIST`

### Melihat Student Berdasarkan Id
```
ACCESS: all
GET /student/id/<id>
{
    "id": "string|uuidv4",
}
```

Success:
```
{
  "user_id": "string|uuidv4",
  "name": "string|length:1-256",
  "email": "string|email",
  "npm": "string|length:1-16",
  "initial_year": "integer|range:1970-9000" /* tahun awal masuk */
}
```

Error:
* `E_NOT_EXIST`

### Melihat Student Berdasarkan NPM
```
ACCESS: all
GET /student/npm/<npm>
{
    "npm": "string|range:1-16",
}
```

Success:
```
{
  "user_id": "string|uuidv4",
  "name": "string|length:1-256",
  "email": "string|email",
  "npm": "string|length:1-16",
  "initial_year": "integer|range:1970-9000" /* tahun awal masuk */
}
```

Error:
* `E_NOT_EXIST`

### Melihat Daftar Student
```
ACCESS: all
FILTER: name, email, npm, initial_year
ORDER: name, email, npm, initial_year
GET /students?filter=<filter>&order=<order>&limit=<limit>&offset=<offset>
{
    "filter?": {
        "name?": "string",
        "email?": "string",
        "npm?": "string",
        "initial_year?": "integer" /* tahun awal masuk */
    },
    "order?": {
        "column": "string|default:code",
        "direction": "string|default:asc"
    },
    "limit?": "integer|range:1-10|default:5",
    "offset?": "integer|range:1-100|default:0"
}
```
Penggunaan `filter` untuk `name`, `email`, dan `npm` dilakukan dengan melakukan perbandingan sebagian, yang berarti *string* 'abc' pada filter cocok dengan string 'abcd' pada basis data, karena *string* 'abcd' mengandung *string* 'abc'. Penggunaan `filter` untuk `initial_year` dilakukan dengan menggunakan perbandingan penuh. Kolom yang dapat diurutkan adalah: `name`, `email`, dan `npm`.
Untuk penjelasan tentang `limit` dan `offset` lihat bagian [Melihat Daftar Mata Kuliah](#melihat-daftar-mata-kuliah).

Success:
```
{
  "user_id": "string|uuidv4",
  "name": "string|length:1-256",
  "email": "string|email",
  "npm": "string|length:1-16",
  "initial_year": "integer|range:1970-9000" /* tahun awal masuk */
}
```

## Endpoint: Tag
### Membuat Tag
```
ACCESS: admin
POST /tags
{
  "tag": "string|length:1-256"
}
```

Success:
```
{
  "id": "string|uuidv4",
  "tag": "string|length:1-256"
}
```

Error:
* `E_DUPLICATE` (*field* `tag`)

### Menghapus Tag
```
ACCESS: admin
DELETE /tags/<id>
{
  "id": "string|uuidv4"
}
```

Success:
```
{
  "id": "string|uuidv4",
  "tag": "string|length:1-256"
}
```

Error:
* `E_NOT_EXIST`


### Mengubah Tag
```
ACCESS: admin
PATCH /tags/<id>
{
    "id": "string|uuidv4",
    "tag": "string|length:1-256"
}
```

Success:
```
{
  "id": "string|uuidv4",
  "tag": "string|length:1-256"
}
```

Error:
* `E_NOT_EXIST`
* `E_DUPLICATE` (*field* `tag`)

### Melihat Daftar Tag
```
ACCESS: all
GET /tags
```

Success:
```
[
  {
    "id": "string|uuidv4",
    "tag": "string|length:1-256"
  }
]
```

## Endpoint: Lecturer Time Slot
### Membuat Slot
```
ACCESS: lecturer
POST /lecturer-time-slots
{
  "id": "string|uuidv4",
  "lecturer_id": "string|uuidv4",
  "day": "string|day",
  "start_time": "string|time",
  "end_time": "string|time",
  "created_at": "string|datetime",
  "updated_at": "string|datetime",
}
```

Success:
```
{
  "id": "string|uuidv4",
  "lecturer_id": "string|uuidv4",
  "day": "string|day",
  "start_time": "string|time",
  "end_time": "string|time",
  "created_at": "string|datetime",
  "updated_at": "string|datetime",
}
```

Error:
* `E_OVERLAPPED_SCHEDULE`

### Menghapus Slot
```
ACCESS: lecturer
DELETE /lecturer-time-slots/<id>
{
    "id": "string|uuidv4"
}
```

Success:
```
{
  "id": "string|uuidv4",
  "lecturer_id": "string|uuidv4",
  "day": "string|day",
  "start_time": "string|time",
  "end_time": "string|time",
  "created_at": "string|datetime",
  "updated_at": "string|datetime",
}
```

Error:
* `E_UNAUTHORIZED`: hanya dosen yang membuat slot yang dapat menghapusnya kembali

### Melihat Daftar Slot
```
ACCESS: all
GET /lecturer-time-slots/lecturers/<lecturer_id>
{
    "lecturer_id": "string|uuidv4"
}
```

Success:
```
[
  {
    "id": "string|uuidv4",
    "lecturer_id": "string|uuidv4",
    "day": "string|day",
    "start_time": "string|time",
    "end_time": "string|time",
    "created_at": "string|datetime",
    "updated_at": "string|datetime",
  }
]
```

## Endpoint: Appointment
### Membuat Appointment
```
ACCESS: all
POST /appointments
{
    "title": "string|length:1-256",
    "description?": "string|length:1-5000",
    "start_datetime": "string|datetime",
    "end_datetime": "string|datetime"
}
```

### Mengubah Appointment
```
ACCESS: all (owner/organizer)
PATCH /appointments/<id>
{
    "id": "string|uuidv4",
    "title?": "string|length:1-256",
    "description?": "string|length:1-5000",
    "start_datetime?": "string|datetime",
    "end_datetime?": "string|datetime"
}
```

### Menghapus Appointment
```
ACCESS: all (owner/organizer)
DELETE /appointments/<id>
{
    "id": "string|uuidv4"
}
```

### Melihat Appointment
```
ACCESS: all
GET /appointments/<id>
{
    "id": "string|uuidv4"
}
```

### Melihat Daftar Appointment (Update: 14-12-2022-1)
```
ACCESS: all
GET /appointments/<user_id>/<start_date>/<end_date>
{
    "user_id": "string|uuidv4",
    "start_date": "string|date",
    "end_date": "string|date"
}
```

### Membuat Peserta Appointment
```
ACCESS: all (owner/organizer)
POST /appointments/<id>
{
    "id": "string|uuidv4",
    "participants": [
        "string|uuidv4"
    ]
}
```

### Menghapus Peserta Appointment
```
ACCESS: all (owner/organizer)
DELETE /appointments/<id>
{
    "id": "string|uuidv4",
    "participants": [
        "string|uuidv4"
    ]
}
```

## Endpoint: Enrolment
### Menambah Enrolment
```
ACCESS: student
POST /enrolments
{
    "course_id": "string|uuidv4",
    "academic_year": "string|academic_year",
}
```

### Mengubah Enrolment
```
ACCESS: student
PATCH /enrolments/<course_id>/academic-years/<academic_year>
{
    "course_id": "string|uuidv4", 
    "academic_year": "string|academic_year",
    "score": "string|score"
}
```

### Menghapus Enrolment
```
ACCESS: student
DELETE /enrolments/<course_id>/academic-years/<academic_year>
{
    "course_id": "string|uuidv4",
    "academic_year": "integer|academic_year"
}
```

### Melihat Daftar Enrolment (Student)
```
ACCESS: student
DELETE /enrolments/academic-years/<academic_year>
{
    "academic_year": "integer|academic_year"
}
```

### Melihat Daftar Enrolment (Admin dan Lecturer)
```
ACCESS: admin, lecturer
DELETE /enrolments/academic-years/<academic_year>/students/<student_id>
{
    "academic_year": "integer|academic_year",
    "student_id": "string|uuidv4"
}
```

### Membuat Lock Enrolment
```
ACCESS: admin
POST /enrolments/locks/create
{
    "academic_year": "integer|academic_year",
    "stage": "integer|range:1-2",
    "students": [
        "string|uuidv4"
    ]
}
```

### Menghapus Lock Enrolment
```
ACCESS: admin
DELETE /enrolments/locks/delete
{
    "academic_year": "integer|academic_year",
    "stage": "integer|range:1-2",
    "students": [
        "string|uuidv4"
    ]
}
```
